unit UFrmUsuarios;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, UFrmBase, Data.DB, Vcl.Buttons, Generics.Collections,
  Vcl.StdCtrls, Vcl.ComCtrls, Vcl.Grids, Vcl.DBGrids,Controller,UsuarioController,Usuario,
  Vcl.Mask, Vcl.DBCtrls, bsSkinCtrls, bsSkinGrids, bsDBGrids, bsSkinBoxCtrls,
  BusinessSkinForm,ServerData;

type
  TFrmUsuarios = class(TFrmBase)
    Label3: TLabel;
    Label4: TLabel;
    DBESenha: TDBEdit;
    DBENome: TDBEdit;
    procedure FormCreate(Sender: TObject);
    procedure BtnSalvarClick(Sender: TObject);
    procedure BtnExcluirClick(Sender: TObject);
    procedure btnPesquisarClick(Sender: TObject);
  private
    { Private declarations }
    Controller : TUsuarioController;
    fCamposPesquisa:TObjectList<TServerData>;
    procedure AtualizaGrid(usuarios:TObjectList<TUsuario>);
    procedure AtualizaCamposPesquisa(campos:TObjectList<TServerData>);
  public
    { Public declarations }


  end;

var
  FrmUsuarios: TFrmUsuarios;

implementation

{$R *.dfm}

uses UDm;


procedure TFrmUsuarios.AtualizaCamposPesquisa(campos: TObjectList<TServerData>);
var
 i :integer;
begin
cbbPesquisa.Items.Clear;

for i := 0 to campos.Count - 1 do
  begin
    cbbPesquisa.Items.Add(campos[i].Value);

  end;
end;

procedure TFrmUsuarios.AtualizaGrid(usuarios:TObjectList<TUsuario>);
var
 i :integer;
begin
for i := 0 to usuarios.Count - 1 do
  begin
    Dm.CDSUsuario.Append;
    Dm.CDSUsuario.Fields[0].AsInteger := usuarios.Items[i].Id;
    Dm.CDSUsuario.Fields[1].AsString := usuarios.Items[i].Nome;
    Dm.CDSUsuario.Fields[2].AsString := usuarios.Items[i].Senha;
    Dm.CDSUsuario.Post;
  end;
  Dm.CDSUsuario.Open;
  Dm.CDSUsuario.EnableControls;
end;

procedure TFrmUsuarios.BtnExcluirClick(Sender: TObject);
begin
  try
    Controller.Exclui(Dm.CDSUsuarioID.Value);
    Dm.CDSUsuario.Delete;
  except
      ShowMessage('Erro ao tentar excluir o usuário');
  end;

end;

procedure TFrmUsuarios.btnPesquisarClick(Sender: TObject);
begin
  inherited;
  Dm.CDSUsuario.EmptyDataSet;
  AtualizaGrid(Controller.Consulta(self.fCamposPesquisa[self.cbbPesquisa.ItemIndex].Key,ePesquisa.Text,'like',0));
end;

procedure TFrmUsuarios.BtnSalvarClick(Sender: TObject);
var
Usuario:TUsuario;
list:TObjectList<TUsuario>;
begin
  //inherited;
  try
    Usuario:=TUsuario.Create;
    Usuario.Id := Dm.CDSUsuarioID.Value;
    Usuario.Nome := Dm.CDSUsuarioNOME.Value;
    Usuario.Senha := Dm.CDSUsuarioSENHA.Value;
    try
      if Dm.CDSUsuario.State in [dsInsert] then
          Dm.CDSUsuarioID.Value := TUsuario(Controller.Insere(Usuario)).id
      else  Dm.CDSUsuarioID.Value := TUsuario(Controller.Altera(Usuario)).Id;
    inherited;
    except
      ShowMessage('Erro ao tentar salvar o usuário');
    end;
  finally
    Usuario.Free
  end;

end;

procedure TFrmUsuarios.FormCreate(Sender: TObject);
var
key:String;
begin
  inherited;

  Controller := TUsuarioController.Create;
  fCamposPesquisa := Controller.IndexFields;
  AtualizaCamposPesquisa(fCamposPesquisa);
  AtualizaGrid(Controller.Consulta('1','1','ALL',0));
  Dm.CDSUsuario.Fields[2].Visible := false;
end;

end.

